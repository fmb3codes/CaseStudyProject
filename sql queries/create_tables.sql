

-- *********** CREATE TABLES ************


-- ******* CUSTOMERS ******

CREATE TABLE CUSTOMERS (
	C_ID CHAR(7) NOT NULL,
	FIRST_NAME VARCHAR2(15) NOT NULL,
	LAST_NAME  VARCHAR2(20) NOT NULL,
	PASSWORD   VARCHAR2(9) NOT NULL ,
	LAST_LOGIN TIMESTAMP NOT NULL,
	EMAIL	   VARCHAR2(320),
	HOME_NUMBER    NUMBER(9) NOT NULL,
	MOBILE_NUMBER  NUMBER(9) NOT NULL,
	PRIMARY KEY (C_ID),
	CONSTRAINT UNIQUE_CUS_EMAIL UNIQUE(EMAIL)
);

CREATE SEQUENCE SEQ_CUSTOMERS MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* LOCATIONS_TYPES ******

CREATE TABLE LOCATIONS_TYPES (
    LT_ID CHAR(7) NOT NULL PRIMARY KEY,
    LOCATION_NAME VARCHAR2(30) NOT NULL,
	CONSTRAINT UNIQUE_LN UNIQUE(LOCATION_NAME)
);

CREATE SEQUENCE SEQ_LOC_TYPES MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* CUSTOMERS_LOCATIONS ******

CREATE TABLE CUSTOMERS_LOCATIONS (
    CL_ID		CHAR(7) NOT NULL PRIMARY KEY,
    LT_ID    	CHAR(7) NOT NULL,
	STREET_ADDRESS VARCHAR2(20) NOT NULL,
    CITY   	VARCHAR2(20) NOT NULL,
	STATE		VARCHAR2(15) NOT NULL,
	ZIP_CODE	VARCHAR2(5) NOT NULL, 
	C_ID		CHAR(7) NOT NULL,           
	CONSTRAINT C_ID_FK FOREIGN KEY (C_ID) REFERENCES CUSTOMERS(C_ID)
	ON DELETE CASCADE,
	CONSTRAINT LT_ID_FK FOREIGN KEY (LT_ID) REFERENCES LOCATIONS_TYPES(LT_ID)
	ON DELETE CASCADE
);

CREATE SEQUENCE SEQ_CUS_LOC MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* MEAL_TYPES ******

CREATE TABLE MEAL_TYPES (
    MT_ID CHAR(7),
    NAME VARCHAR(25),
	PRIMARY KEY(MT_ID),
	CONSTRAINT UNIQUE_MN UNIQUE(NAME)
);

CREATE SEQUENCE SEQ_MEAL_TYPES MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* MEALS ******

CREATE TABLE MEALS (
    M_ID CHAR(7) PRIMARY KEY,
    DESCRIPTION	VARCHAR(120) NOT NULL,
	NAME VARCHAR2(20) NOT NULL,
    PRICE DECIMAL(5,2) NOT NULL,
    IMAGE_PATH VARCHAR2(255) NOT NULL,
	MEAL_OF_DAY	DATE,
	MT_ID CHAR(7) NOT NULL,
	CONSTRAINT MT_ID_FK FOREIGN KEY(MT_ID) REFERENCES MEAL_TYPES(MT_ID)
);

CREATE SEQUENCE SEQ_MEALS MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* ORDER_STATUS ******

CREATE TABLE ORDER_STATUS (
    OS_ID CHAR(7),
    NAME VARCHAR(25),
	PRIMARY KEY(OS_ID),
	CONSTRAINT UNIQUE_OSN UNIQUE(NAME)
);

CREATE SEQUENCE SEQ_ORDER_STAT MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* ORDERS ******

CREATE TABLE ORDERS(
	O_ID	CHAR(7) NOT NULL PRIMARY KEY,
	ORDER_DATE	DATE NOT NULL ,
	DELIVERY_DATE	DATE NOT NULL,
	ORDER_ON_HOLD	CHAR(1 BYTE),
	TIMES_CHANGED	INT DEFAULT 0,
	C_ID CHAR(7) NOT NULL,
	OS_ID CHAR(7) NOT NULL,
	CL_ID CHAR(7) NOT NULL,
	CONSTRAINTS C_ID_FK2 FOREIGN KEY(C_ID) REFERENCES CUSTOMERS(C_ID)
	ON DELETE CASCADE,
	CONSTRAINTS OS_ID_FK FOREIGN KEY(OS_ID) REFERENCES ORDER_STATUS(OS_ID)
	ON DELETE CASCADE,
	CONSTRAINTS CL_ID_FK FOREIGN KEY(CL_ID) REFERENCES CUSTOMERS_LOCATIONS(CL_ID)
	ON DELETE CASCADE
);

CREATE SEQUENCE SEQ_ORDERS MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* ORDER_MEALS ******

CREATE TABLE ORDER_MEALS (
    OM_ID CHAR(7) NOT NULL PRIMARY KEY,
	M_ID CHAR(7) NOT NULL,
	O_ID CHAR(7) NOT NULL,
	QUANTITY INT DEFAULT 1,
	CONSTRAINT M_ID_FK2 FOREIGN KEY(M_ID) REFERENCES MEALS(M_ID),
	CONSTRAINT O_ID_FK2 FOREIGN KEY(O_ID) REFERENCES ORDERS(O_ID)
);

CREATE SEQUENCE SEQ_ORDER_MEALS MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* PAYMENT_TYPES ******

CREATE TABLE PAYMENT_TYPES (
    PT_ID		CHAR(7) PRIMARY KEY,
    PAYMENT_NAME	VARCHAR2(30),
	CONSTRAINT UNIQUE_PTN UNIQUE(PAYMENT_NAME)
);

CREATE SEQUENCE SEQ_PAY_TYPES MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* PAYMENTS ******

CREATE TABLE PAYMENTS (
    P_ID CHAR(7) NOT NULL,
    PT_ID CHAR(7) NOT NULL,
	O_ID CHAR(7) NOT NULL,
	PRIMARY KEY(P_ID,O_ID),
	CONSTRAINT PT_ID_FK FOREIGN KEY(PT_ID) REFERENCES PAYMENT_TYPES(PT_ID)
	ON DELETE CASCADE,
	CONSTRAINT O_ID_FK FOREIGN KEY(O_ID) REFERENCES ORDERS(O_ID)
	ON DELETE CASCADE
);

CREATE SEQUENCE SEQ_PAY MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* CARD_TYPES ******

CREATE TABLE CARD_TYPES(
	CT_ID	CHAR(7) NOT NULL PRIMARY KEY,
	NAME	VARCHAR2(40),
	CONSTRAINT UNIQUE_CTN UNIQUE(NAME)
);

CREATE SEQUENCE SEQ_CARD_TYPES MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* CREDIT_CARDS ******

CREATE TABLE CREDIT_CARDS(
	CC_ID CHAR(7) NOT NULL PRIMARY KEY,
	NAME_ON_CARD	VARCHAR2(100),
	CARD_NUMBER	VARCHAR2(16),
	CT_ID		CHAR(7) NOT NULL,
	CONSTRAINT CT_ID_FK FOREIGN KEY(CT_ID) REFERENCES CARD_TYPES(CT_ID)
	ON DELETE CASCADE
);

CREATE SEQUENCE SEQ_CREDIT_CARDS MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* CUSTOMERS_CREDIT_CARDS ******

CREATE TABLE CUSTOMERS_CREDIT_CARDS(
	CC_ID	CHAR(7) NOT NULL,
	C_ID	CHAR(7) NOT NULL,
	CONSTRAINT CC_ID_FK FOREIGN KEY(CC_ID) REFERENCES CREDIT_CARDS(CC_ID)
	ON DELETE CASCADE,
	CONSTRAINT C_ID2_FK FOREIGN KEY(C_ID) REFERENCES CUSTOMERS(C_ID)
	ON DELETE CASCADE,
	PRIMARY KEY(CC_ID,C_ID)
);

CREATE SEQUENCE SEQ_CUS_CRE_CARDS MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* CREDIT_CARD_DETAILS ******

CREATE TABLE CREDIT_CARD_DETAILS(
	P_ID	CHAR(7) NOT NULL,
	CC_ID	CHAR(7) NOT NULL,
	O_ID    CHAR(7) NOT NULL,
	CONSTRAINT CC_ID2_FK FOREIGN KEY(CC_ID) REFERENCES CREDIT_CARDS(CC_ID)
	ON DELETE CASCADE,
	CONSTRAINT P_ID_FK FOREIGN KEY(P_ID,O_ID) REFERENCES PAYMENTS(P_ID, O_ID)
	ON DELETE CASCADE,
	PRIMARY KEY(P_ID)
);

CREATE SEQUENCE SEQ_CREDIT_CARD_DET MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* DELIVERING_POINTS ******

CREATE TABLE DELIVERING_POINTS (
    DP_ID		CHAR(7) NOT NULL,
    STREET_ADDRESS VARCHAR2(20) NOT NULL,
	CITY      	VARCHAR2(20) NOT NULL,
    STATE      	VARCHAR2(15) NOT NULL,
    ZIP_CODE  	CHAR(5),
    PHONE_NUMBER    NUMBER(9) NOT NULL,
	PRIMARY KEY (DP_ID)
);

CREATE SEQUENCE SEQ_DEL_POINTS MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* CUSTOMER_PROFILES ******

CREATE TABLE CUSTOMER_PROFILES (
    CP_ID	   CHAR(7) NOT NULL,
	PRIMARY KEY (CP_ID)
);

CREATE SEQUENCE SEQ_CUS_PRO MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;

-- ******* ADMINS ******

CREATE TABLE ADMINS (
	A_ID CHAR(7) NOT NULL PRIMARY KEY,
	FIRST_NAME VARCHAR(20) NOT NULL,
	LAST_NAME VARCHAR(20) NOT NULL,
	PASSWORD VARCHAR(9) NOT NULL,
	LAST_LOGIN TIMESTAMP NOT NULL
);

CREATE SEQUENCE SEQ_ADMIN MINVALUE 1000000 START WITH 1000000 INCREMENT BY 1;


-- ******* POPULATE TABLES *******

-- POPULATE CUSTOMERS TABLE --

INSERT INTO CUSTOMERS(C_ID,FIRST_NAME,LAST_NAME,PASSWORD,LAST_LOGIN,EMAIL,HOME_NUMBER,MOBILE_NUMBER)
	VALUES(SEQ_CUSTOMERS.NEXTVAL, 'David', 'Portillo', 'password1', '21/JAN/2017 04:00:00', 'david@gmail.com', 230300020, 453043204);
INSERT INTO CUSTOMERS(C_ID,FIRST_NAME,LAST_NAME,PASSWORD,LAST_LOGIN,EMAIL,HOME_NUMBER,MOBILE_NUMBER)
	VALUES(SEQ_CUSTOMERS.NEXTVAL, 'Lawrence', 'Broomfield', 'password1', '21/JAN/2017 04:00:00', 'lawrence@gmail.com', 345246642, 964739432);
INSERT INTO CUSTOMERS(C_ID,FIRST_NAME,LAST_NAME,PASSWORD,LAST_LOGIN,EMAIL,HOME_NUMBER,MOBILE_NUMBER)
	VALUES(SEQ_CUSTOMERS.NEXTVAL, 'Franklin', 'Berry', 'password1', '21/JAN/2017 04:00:00', 'Franklin@gmail.com', 947582443, 534254321);

-- POPULATE LOCATIONS_TYPES

INSERT INTO LOCATIONS_TYPES(LT_ID,LOCATION_NAME) VALUES(SEQ_LOC_TYPES.NEXTVAL, 'Billing');
INSERT INTO LOCATIONS_TYPES(LT_ID,LOCATION_NAME) VALUES(SEQ_LOC_TYPES.NEXTVAL, 'Residencial');

-- POPULATE CUSTOMERS_LOCATIONS 

INSERT INTO CUSTOMERS_LOCATIONS(CL_ID,LT_ID,STREET_ADDRESS,CITY,STATE,ZIP_CODE,C_ID) 
	VALUES(SEQ_CUS_LOC.NEXTVAL, '1000000', 'Fake Address','Arlington', 'VA', '22207', '1000000');
INSERT INTO CUSTOMERS_LOCATIONS(CL_ID,LT_ID,STREET_ADDRESS,CITY,STATE,ZIP_CODE,C_ID) 
	VALUES(SEQ_CUS_LOC.NEXTVAL, '1000001', 'Fake Address','Phoenix', 'AZ', '87887', '1000000');
INSERT INTO CUSTOMERS_LOCATIONS(CL_ID,LT_ID,STREET_ADDRESS,CITY,STATE,ZIP_CODE,C_ID) 
	VALUES(SEQ_CUS_LOC.NEXTVAL, '1000001', 'Fake Address','MyCity', 'MyState', '23424', '1000001');
INSERT INTO CUSTOMERS_LOCATIONS(CL_ID,LT_ID,STREET_ADDRESS,CITY,STATE,ZIP_CODE,C_ID) 
	VALUES(SEQ_CUS_LOC.NEXTVAL, '1000000', 'Fake Address','Kentucky City', 'Kentucky', '23424', '1000002');

-- POPULATE MEAL_TYPES

INSERT INTO MEAL_TYPES(MT_ID,NAME)
	VALUES (SEQ_MEAL_TYPES.NEXTVAL,'Vegan');
INSERT INTO MEAL_TYPES(MT_ID,NAME)
	VALUES(SEQ_MEAL_TYPES.NEXTVAL,'Non-Vegan');

-- POPULATE ORDER STATUS

INSERT INTO ORDER_STATUS(OS_ID,NAME)
	 VALUES(SEQ_ORDER_STAT.NEXTVAL, 'PENDING');
INSERT INTO ORDER_STATUS(OS_ID,NAME)
	 VALUES(SEQ_ORDER_STAT.NEXTVAL, 'DELIVERED');
	 
-- POPULATE ADMINS

INSERT INTO ADMINS(A_ID,FIRST_NAME,LAST_NAME,PASSWORD,LAST_LOGIN)
	VALUES(SEQ_CUSTOMERS.NEXTVAL, 'David', 'Portillo', 'password1', '21/JAN/2017 04:00:00');
INSERT INTO ADMINS(A_ID,FIRST_NAME,LAST_NAME,PASSWORD,LAST_LOGIN)
	VALUES(SEQ_CUSTOMERS.NEXTVAL, 'Lawrence', 'Broomfield', 'password1', '21/JAN/2017 04:00:00');
INSERT INTO ADMINS(A_ID,FIRST_NAME,LAST_NAME,PASSWORD,LAST_LOGIN)
	VALUES(SEQ_CUSTOMERS.NEXTVAL, 'Franklin', 'Berry', 'password1', '21/JAN/2017 04:00:00');
	

	
-- POPULATE MEALS

INSERT INTO MEALS(M_ID, NAME, DESCRIPTION, PRICE, IMAGE_PATH, MEAL_OF_DAY, MT_ID)
	VALUES(SEQ_MEALS.NEXTVAL, 'HOT SANDWICHES', 'Eggs, Sausage/Bacon, and Cheese on a toasted muffin.', 3.50, 'C:/image_file_path', '21/JUL/2017','1000000');
INSERT INTO MEALS(M_ID, NAME, DESCRIPTION, PRICE, IMAGE_PATH, MEAL_OF_DAY, MT_ID)
	VALUES(SEQ_MEALS.NEXTVAL, 'SOUP -N- SANDWICH', 'Full-flavored tuna salad, with iceberg lettuce and tomato ', 8.50, 'C:\\image_file_path', '29/MAY/2017','1000000');
INSERT INTO MEALS(M_ID, NAME, DESCRIPTION, PRICE, IMAGE_PATH, MEAL_OF_DAY, MT_ID)
	VALUES(SEQ_MEALS.NEXTVAL, 'CHILI', 'A twist on the original, with corn, carrots, and black beans replacing the meat.', 5.50, 'C:\\image_file_path', '30/MAY/2017','1000001');
	
	
-- POPULATE PAYMENT TYPES

INSERT INTO PAYMENT_TYPES(PT_ID, PAYMENT_NAME)
	VALUES(SEQ_PAY_TYPES.NEXTVAL, 'Cash');
INSERT INTO PAYMENT_TYPES(PT_ID, PAYMENT_NAME)
	VALUES(SEQ_PAY_TYPES.NEXTVAL, 'Credit Card');
	
-- POPULATE CARD TYPES

INSERT INTO CARD_TYPES(CT_ID, NAME)
	VALUES(SEQ_CARD_TYPES.NEXTVAL, 'Visa');
INSERT INTO CARD_TYPES(CT_ID, NAME)
	VALUES(SEQ_CARD_TYPES.NEXTVAL, 'Master Card');
	
-- POPULATE CREDIT CARDS

INSERT INTO CREDIT_CARDS(CC_ID, NAME_ON_CARD, CARD_NUMBER, CT_ID)
	VALUES(SEQ_CREDIT_CARDS.NEXTVAL,'DAVID P','2459305335212434','1000004');
INSERT INTO CREDIT_CARDS(CC_ID, NAME_ON_CARD, CARD_NUMBER, CT_ID)
	VALUES(SEQ_CREDIT_CARDS.NEXTVAL,'DAVID P','4500200965432465','1000005');

-- POPULATE  CUSTOMERS_CREDIT_CARDS

INSERT INTO CUSTOMERS_CREDIT_CARDS(CC_ID, C_ID)
	VALUES('1000008','1000000');
INSERT INTO CUSTOMERS_CREDIT_CARDS(CC_ID, C_ID)
	VALUES('1000009','1000000');


	
	
-- SELECT CC.NAME_ON_CARD, CC.CARD_NUMBER, CT.NAME FROM 
-- CUSTOMERS_CREDIT_CARDS CCC
-- JOIN CREDIT_CARDS CC ON CCC.CC_ID = CC.CC_ID
-- JOIN CARD_TYPES CT ON CC.CT_ID = CT.CT_ID
-- WHERE CCC.C_ID = '1000000';


-- SELECT TEMP.P_ID FROM (SELECT P.*, ROW_NUMBER() 
-- OVER (ORDER BY P.P_ID DESC) R FROM PAYMENTS P) TEMP 
-- WHERE R=1 AND O_ID='1000066';

-- SELECT O.DELIVERY_DATE, M.NAME, M.DESCRIPTION, M.PRICE, OS.NAME, PT.PAYMENT_NAME FROM MEALS M
-- JOIN ORDER_MEALS OM
-- ON M.M_ID = OM.M_ID
-- JOIN ORDERS O
-- ON OM.O_ID = O.O_ID
-- JOIN ORDER_STATUS OS
-- ON O.OS_ID = OS.OS_ID
-- JOIN PAYMENTS P
-- ON P.O_ID = O.O_ID
-- JOIN PAYMENT_TYPES PT
-- ON P.PT_ID = PT.PT_ID
-- WHERE O.O_ID = '1000125';




